{
    "openapi": "3.0.0",
    "info": {
        "title": "GadgetByteNepal",
        "description": "GadgetByte Nepal Rest Apis Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Get a list of Attributes",
                "operationId": "7f70158fcf2ebe8119e28f5f989b4536",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or url ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AttributeResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Create a new Attribute",
                "operationId": "4802484e1daefc81ffc3523d305ad197",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attributes data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAttributeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/attributes/{id}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Get a specific menu",
                "operationId": "ca7b1b8f967d0bafa2adb0392651973b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Update an existing menu",
                "description": "Update the specified resource in storage.",
                "operationId": "d45cc99d31e0301f5a55018ff86f50c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attribute data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAttributeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Delete an menu",
                "description": "Remove the specified resource from storage.",
                "operationId": "5a19eaaa6c6f80e02f6946cc7784931b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Attribute deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AttributeResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a list of Brands",
                "operationId": "265f173d55c77d2ffffe46be4ba57fa8",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or slug ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new Brand",
                "operationId": "354e334c26df48b4a20817df45f8fa7b",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Brands data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBrandRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a specific brand",
                "operationId": "41ee41610cd373b7f6b3ecf7b8253877",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the brand to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update an existing brand",
                "description": "Update the specified resource in storage.",
                "operationId": "818bae2e9412f13a474dd3af9c4049b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the brand to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Brand data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBrandRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete an brand",
                "description": "Remove the specified resource from storage.",
                "operationId": "a5475e12bf803edae8884e43dca17735",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the brand to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Brand deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BrandResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/frontend/customers": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create a new Customer",
                "operationId": "08a2196ed6f012f5c72bdada45a31dbd",
                "requestBody": {
                    "description": "User Types data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/frontend/post": {
            "get": {
                "tags": [
                    "Frontend Posts"
                ],
                "summary": "Get a list of Posts",
                "operationId": "d991f7fbede20225cca971ef760da3a2",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Search post for filtering by catgory id ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_slug",
                        "in": "query",
                        "description": "Search post for filtering by catgory slug ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Search post for filtering by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FrontendPostResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/frontend/post/{slug}": {
            "get": {
                "tags": [
                    "Frontend Posts"
                ],
                "summary": "Get a specific post",
                "operationId": "f7795e29e8abc13b3ba1b2109e050b27",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "The Slug of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/bookmarks": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get a list of Bookmarks",
                "operationId": "d45ab70b827837660a30427972d1d8ef",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserBookmarkResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a new UserBookmark",
                "operationId": "db9f6b1e2b9338869730b1f0fbad96f3",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Bookmarks data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserBookmarkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created bookmark",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBookmarkResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/bookmarks/{id}": {
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete an bookmark",
                "description": "Remove the specified resource from storage.",
                "operationId": "a5b835a94247113a5e3b951c4c5a3477",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the bookmark to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted bookmark",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UserBookmark deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserBookmarkResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "bb4831f9057e08ec9937e75b14314fd4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "description": "The email or username of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "The access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-05-14 10:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid username or password",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "b020be50e34b05500ffd81729fbc10fa",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Successfully logged out",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/socail-login": {
            "post": {
                "tags": [
                    "Social Login"
                ],
                "summary": "User login",
                "operationId": "cebb73c4e2812ee710cf503f2340baa6",
                "requestBody": {
                    "description": "Social Login data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSocialLoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "The access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-05-14 10:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid data",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/medias": {
            "get": {
                "tags": [
                    "Medias"
                ],
                "summary": "Get a list of Medias",
                "operationId": "15bf98ef3081af654b0a40149dc57d52",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MediaResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Medias"
                ],
                "summary": "Create a new Media",
                "operationId": "59861c47dc33ffbb65b880caa3a2a877",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Medias data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMediaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created media",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/medias/{id}": {
            "get": {
                "tags": [
                    "Medias"
                ],
                "summary": "Get a specific media",
                "operationId": "d778464cde3cf932228a8d23b0c0b644",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the media to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Menus"
                ],
                "summary": "Update an existing media",
                "description": "Update the specified resource in storage.",
                "operationId": "1acec4db8295496ba82d95f662bb8b72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the media to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Menu data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated media",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Medias"
                ],
                "summary": "Delete an media",
                "description": "Remove the specified resource from storage.",
                "operationId": "698933008258ec9a602223d0578eb993",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the media to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted media",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Media deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MediaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/menus": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get a list of Menus",
                "operationId": "4512a8cf3e47b6bbb48efa21ad1005e0",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or url ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Menus"
                ],
                "summary": "Create a new Menu",
                "operationId": "70898b64abbfbbd24bb791f350e431f1",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Menus data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/menus/{id}": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get a specific menu",
                "operationId": "8c0d54161361f4fe73878816aaf255fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Menus"
                ],
                "summary": "Update an existing menu",
                "description": "Update the specified resource in storage.",
                "operationId": "3a1b7614952313c2aef652efdd8e835a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Menu data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Menus"
                ],
                "summary": "Delete an menu",
                "description": "Remove the specified resource from storage.",
                "operationId": "91da1c47c2a883eae55fb1fbb7b19c63",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/menu-permissions": {
            "get": {
                "tags": [
                    "Menu Permissions"
                ],
                "summary": "Get a list of Menu Permissions",
                "operationId": "3ca0af3f8b7e95681c3746dbae404cc7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Menu Permissions"
                ],
                "summary": "Create a new Menu Permission",
                "operationId": "2f4b6b469f88ad4ce23e083f0560a782",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Menu Permissions data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created menu permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/menu-permissions/{id}": {
            "delete": {
                "tags": [
                    "Menu Permissions"
                ],
                "summary": "Delete an menu permission",
                "description": "Remove the specified resource from storage.",
                "operationId": "b09618229008a26dea5022fa9bbb9898",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the menu permisison to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted menu permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu Permission deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-categories": {
            "get": {
                "tags": [
                    "Post Categories"
                ],
                "summary": "Get a list of Post Categories",
                "operationId": "6aa85d53c26966cbbbe91a15fb6f3b51",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or slug ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "For dropdown or list:(dropdown/list) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostCategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post Categories"
                ],
                "summary": "Create a new Post Category",
                "operationId": "721580de736279c0e41638d7dc510364",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Categories data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-categories/{id}": {
            "get": {
                "tags": [
                    "Post Categories"
                ],
                "summary": "Get a specific post category",
                "operationId": "d1861b535175cd5f468543ac82cdc2e9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Post Categories"
                ],
                "summary": "Update an existing post category",
                "description": "Update the specified resource in storage.",
                "operationId": "d815d6ac306cb1e38b0c033699f5b4d9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "PostCategory data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post Categories"
                ],
                "summary": "Delete an post category",
                "description": "Remove the specified resource from storage.",
                "operationId": "2b23682b9d14a2de5fbb0fd9b8977b80",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PostCategory deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostCategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a list of Posts",
                "operationId": "7b253f6aade6833019f938c1f2ef08ed",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Search post for filtering by catgory id ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Search post for filtering by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new Post",
                "operationId": "b996500c6caf55100cd024d3e3b49dd5",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Posts data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a specific post",
                "operationId": "db686e4ed73ae7ca2424e0a4f740c8b2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "description": "Update the specified resource in storage.",
                "operationId": "98c3c32a86125c864caa21999f234493",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete an post",
                "description": "Remove the specified resource from storage.",
                "operationId": "82927d2153173c1a7d6ab1e9d52ff56e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-image": {
            "post": {
                "tags": [
                    "Post Image"
                ],
                "summary": "Create a new Post Image",
                "operationId": "f95920a9ce6fe8109312d541ae4ba03e",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Image data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostImageResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-image/{id}": {
            "get": {
                "tags": [
                    "Post Images"
                ],
                "summary": "Get a list of Post Images",
                "operationId": "0ee4ed4479a63c1fe05360a8a868ce48",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostImageResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post Image"
                ],
                "summary": "Delete an post image",
                "description": "Remove the specified resource from storage.",
                "operationId": "f6073d4b3fee9f1432ff960e9b8a12c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post image to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post Image deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostImageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-price": {
            "get": {
                "tags": [
                    "Post Price"
                ],
                "summary": "Get a list of Post Price",
                "operationId": "4fc6d2d5bdcedb8efc1f63e8116cef55",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "description": "Post id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostPriceResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post Price"
                ],
                "summary": "Create a new Post Price",
                "operationId": "ffc5b8610c6845b8389221961f023db2",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Price data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostPriceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostPriceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-price/{id}": {
            "put": {
                "tags": [
                    "Post Price"
                ],
                "summary": "Update an existing post price",
                "description": "Update the specified resource in storage.",
                "operationId": "3615ff98311dc3b29cf522b01aa7a53a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post price to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Price data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostPriceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated post price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostPriceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post Price"
                ],
                "summary": "Delete an post price",
                "description": "Remove the specified resource from storage.",
                "operationId": "4f954f87073fc974504075b379c1991d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post price to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post Price deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostPriceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-review": {
            "get": {
                "tags": [
                    "Post Review"
                ],
                "summary": "Get a list of Post Reviews",
                "operationId": "1da2c5f13265322183c2aa226cca31a4",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "description": "Post id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post Review"
                ],
                "summary": "Create a new Post Review",
                "operationId": "684f9fe8aa52aec6d0d64c51b79f5baf",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Review data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostReviewRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostReviewResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/post-review/{id}": {
            "put": {
                "tags": [
                    "Post Review"
                ],
                "summary": "Update an existing post review",
                "description": "Update the specified resource in storage.",
                "operationId": "87fc339da83c7e2d14925773ec1d8ebe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post review to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Review data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostReviewRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated post review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostReviewResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post Review"
                ],
                "summary": "Delete an post review",
                "description": "Remove the specified resource from storage.",
                "operationId": "c23a2086c2d116f72c91fb0038fc3967",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post review to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post Review deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostReviewResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/product-categories": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Get a list of Product Categories",
                "operationId": "a4ac2a70abc940669991576d36274dbd",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or slug ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "For dropdown or list:(dropdown/list) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductCategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Create a new Product Category",
                "operationId": "49ff726eb14e63e45d117c61e43fab90",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product Categories data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/product-categories/{id}": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Get a specific post category",
                "operationId": "25fc5b26807b8f6388ad9c8dfff79f3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Update an existing post category",
                "description": "Update the specified resource in storage.",
                "operationId": "ae8a42692fd12ed16334b04b3bb76c53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "ProductCategory data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Delete an post category",
                "description": "Remove the specified resource from storage.",
                "operationId": "c574474e92bee8fd76db209cb232d887",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted post category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ProductCategory deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProductCategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a list of Reviews",
                "operationId": "8d140f36ef5ac7526b66ff6292638d97",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get a list of Tags",
                "operationId": "e320cb59dba3e323dacbbc502509717c",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TagResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create a new Tag",
                "operationId": "d5b48558ae6b21f20e758584734e2cd7",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tags data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created tag",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/tags/{id}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get a specific tag",
                "operationId": "a3d7580f0301bd6fff879d635b82a2fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tag to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update an existing tag",
                "description": "Update the specified resource in storage.",
                "operationId": "ab9fc572397025dcf3a29db57acdebdd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tag to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tag data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated tag",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Delete an tag",
                "description": "Remove the specified resource from storage.",
                "operationId": "fab7e3dec2348caad78c23998aa54ba3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tag to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted tag",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tag deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of Users",
                "operationId": "12e989554c281d650dff75443acabf54",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by firstname or lastname or email or username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new User",
                "operationId": "64da9b5a20fa4f20e947ed61b2bbb6da",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "operationId": "a9d321d5dc6bc2613c6cf5ba92b76c89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Update the specified resource in storage.",
                "operationId": "5bcda8371b3cb9f863a47620e636be9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete an User",
                "description": "Remove the specified resource from storage.",
                "operationId": "0446b3779430bbd9ca0f106d9fd0a2ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/user-menus": {
            "get": {
                "tags": [
                    "User Type Wise Menu"
                ],
                "summary": "Get a list of user wise menu ",
                "operationId": "f50bbca76c6797c4e4a7c7aef7a279ec",
                "parameters": [
                    {
                        "name": "user_type_id",
                        "in": "query",
                        "description": "Filter by user_type_id (optional)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/usertypes": {
            "get": {
                "tags": [
                    "UserTypes"
                ],
                "summary": "Get a list of UserTypes",
                "operationId": "b73dce56a0c6315a7fc2924fb13bdf20",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserTypeResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserTypes"
                ],
                "summary": "Create a new UserType",
                "operationId": "eaaaf6610d97c15050f39a86613e4f0b",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User Types data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created usertype",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/usertypes/{id}": {
            "get": {
                "tags": [
                    "UserTypes"
                ],
                "summary": "Get a specific usertype",
                "operationId": "d4a4911d48e8c6528722d6ad16df8d39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the usertype to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTypeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserTypes"
                ],
                "summary": "Update an existing usertype",
                "description": "Update the specified resource in storage.",
                "operationId": "9435d1ec6f0664dcfec5d4b2ab924a43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the usertype to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "UserType data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated usertype",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserTypes"
                ],
                "summary": "Delete an UserType",
                "description": "Remove the specified resource from storage.",
                "operationId": "59273d02230db4c787feba539ff52ebe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the UserType to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted UserType",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UserType deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserTypeResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/vendors": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get a list of Vendors",
                "operationId": "3a74345b7d6981df67075b76d655d93e",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for filtering by name or slug ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (optional, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Create a new Vendor",
                "operationId": "3d4da42f2b521e8f45c946c33fe5842e",
                "parameters": [
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Vendors data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVendorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        },
        "/api/v1/vendors/{id}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get a specific vendor",
                "operationId": "550d6f5c6b07df747f124874d860f603",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the vendor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update an existing vendor",
                "description": "Update the specified resource in storage.",
                "operationId": "9cd560e5c3b436233d14d19acbfce009",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the vendor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Vendor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVendorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Validation error)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Delete an vendor",
                "description": "Remove the specified resource from storage.",
                "operationId": "ca44904a38c090b51ac01fb94add1064",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the vendor to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "X-User-Id",
                        "in": "header",
                        "description": "User ID for authentication",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vendor deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/VendorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    },
                    {
                        "X-User-Id": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "An object representing a validation error response",
                "properties": {
                    "message": {
                        "description": "The error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "An object containing field validation error messages. (This may varies from your api endpoints.)",
                        "type": "object",
                        "example": {
                            "postkey": [
                                "The postkey field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "StoreAttributeRequest": {
                "title": "Attribute  Store Request",
                "description": "Attribute  store request data",
                "required": [
                    "name",
                    "slug",
                    "is_active",
                    "values"
                ],
                "properties": {
                    "name": {
                        "description": "The menu display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The unique slug  of the Attribute.",
                        "type": "string",
                        "example": "/dashboard"
                    },
                    "is_active": {
                        "description": "Enable/Disable of attributes ",
                        "type": "string",
                        "example": "Y/N"
                    },
                    "values": {
                        "description": "The Values in json format",
                        "type": "json",
                        "example": "['100','200','300']"
                    }
                },
                "type": "object"
            },
            "StoreBrandRequest": {
                "title": "Brand  Store Request",
                "description": "Brand  store request data",
                "required": [
                    "name",
                    "slug",
                    "image",
                    "order_by"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Brand display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the Brand.",
                                "type": "string",
                                "example": "apple"
                            },
                            "image": {
                                "description": "The Image Link ",
                                "type": "string",
                                "example": "this is the link of image."
                            },
                            "order_by": {
                                "description": "The Priority of Brand",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreMediaRequest": {
                "title": "Media  Store Request",
                "description": "Media  store request data",
                "required": [
                    "image",
                    "name",
                    "caption",
                    "description"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "image": {
                                "description": "Array of the image",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "name": {
                                "description": "Name of the image",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "caption": {
                                "description": "Caption of the image",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "description": {
                                "description": "Description of the image",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "alt_text": {
                                "description": "Alternative text of the image if image is broken",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreMenuRequest": {
                "title": "Menu  Store Request",
                "description": "Menu  store request data",
                "required": [
                    "name",
                    "url",
                    "icon",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The menu display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "url": {
                                "description": "The Endpoint  of the Menu.",
                                "type": "string",
                                "example": "/dashboard"
                            },
                            "icon": {
                                "description": "The menu's icon ",
                                "type": "string",
                                "example": "fa fa-cogs"
                            },
                            "order_by": {
                                "description": "The Priority of menu",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub menu, Send Menu Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StorePermissionRequest": {
                "title": "Menu Permission  Store Request",
                "description": "Menu Permission store request data",
                "required": [
                    "menu_id",
                    "user_type_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "menu_id": {
                                "description": "The menu Id",
                                "type": "integer",
                                "example": "1"
                            },
                            "user_type_id": {
                                "description": "The User Type's Id",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StorePostCategoryRequest": {
                "title": "Post Category  Store Request",
                "description": "Post Category  store request data",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Post Category display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the PostCategory.",
                                "type": "string",
                                "example": "apple"
                            },
                            "description": {
                                "description": "The Post Category's description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "order_by": {
                                "description": "The Priority of Post Category",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub  Category, Send Post Category Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StorePostImageRequest": {
                "title": "Store Post Image Request",
                "description": "Request data for storing post images",
                "required": [
                    "post_id",
                    "slug",
                    "images"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "post_id": {
                                "description": "The ID of the post",
                                "type": "integer"
                            },
                            "slug": {
                                "description": "The unique images slug for post image",
                                "type": "string"
                            },
                            "images": {
                                "description": "Array of post image details",
                                "type": "array",
                                "items": {
                                    "title": "Post Image",
                                    "description": "Post image details",
                                    "required": [
                                        "title",
                                        "image"
                                    ],
                                    "properties": {
                                        "title": {
                                            "description": "The title of the post",
                                            "type": "string",
                                            "example": "Samsung Galaxy S21 Pro"
                                        },
                                        "image": {
                                            "description": "The image path",
                                            "type": "number",
                                            "format": "string",
                                            "example": "/post/post.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StorePostPriceRequest": {
                "title": "Store Post Price Request",
                "description": "Request data for storing post prices",
                "required": [
                    "post_id",
                    "price"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "post_id": {
                                "description": "The ID of the post",
                                "type": "integer"
                            },
                            "price": {
                                "description": "Array of post price details",
                                "type": "array",
                                "items": {
                                    "title": "Post Price",
                                    "description": "Post price details",
                                    "required": [
                                        "title",
                                        "amount"
                                    ],
                                    "properties": {
                                        "title": {
                                            "description": "The title of the post",
                                            "type": "string",
                                            "example": "Samsung Galaxy S21 Pro"
                                        },
                                        "amount": {
                                            "description": "The price amount",
                                            "type": "number",
                                            "format": "float",
                                            "example": "10000.00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StorePostRequest": {
                "title": "Post Store Request",
                "description": "Post store request data",
                "required": [
                    "title",
                    "slug",
                    "description",
                    "short_description",
                    "category_id",
                    "sub_category_id",
                    "isprice",
                    "show_in_pricelist"
                ],
                "properties": {
                    "title": {
                        "description": "The Post Title",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Slug for the post",
                        "type": "string",
                        "example": "apple"
                    },
                    "short_description": {
                        "description": "The Post's short description ",
                        "type": "string",
                        "example": "this is the short description of it."
                    },
                    "description": {
                        "description": "The Post's description ",
                        "type": "string",
                        "example": "this is the description of it."
                    },
                    "category_id": {
                        "description": "The  Post Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "sub_category_id": {
                        "description": "The Post Sub Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "isprice": {
                        "description": "If Price then 'Y' else 'N'",
                        "type": "string",
                        "example": "Y"
                    },
                    "show_in_pricelist": {
                        "description": "If Price to be shown for price list  then 'Y' else 'N'",
                        "type": "string",
                        "example": "Y"
                    },
                    "categories": {
                        "description": "Ids of the category",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "example": "This is the title for SEO"
                    },
                    "seo_description": {
                        "description": "Description for seo",
                        "type": "string",
                        "example": "This is description for SEO"
                    },
                    "featured_image": {
                        "description": "Image",
                        "type": "string",
                        "example": "https://gadgetbyte.com/logo.png"
                    },
                    "status": {
                        "description": "Status for Draft,Review",
                        "type": "string",
                        "example": "D for Draft,R for Review"
                    },
                    "post_on": {
                        "description": "Date & time to be published on",
                        "type": "string",
                        "example": "2024-05-14 13:55:12"
                    },
                    "is_cornerstone": {
                        "description": "Cornerstone value in Y/N",
                        "type": "string",
                        "example": "Y"
                    },
                    "seo_title_facebook": {
                        "description": "The seo title field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_facebook": {
                        "description": "The seo description field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_title_twitter": {
                        "description": "The seo title field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_twitter": {
                        "description": "The seo description field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "reviews": {
                        "description": "Array of post review details",
                        "type": "array",
                        "items": {
                            "title": "Post Review",
                            "description": "Post review details",
                            "required": [
                                "review_id",
                                "title",
                                "review"
                            ],
                            "properties": {
                                "review_id": {
                                    "description": "The id of the review",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "title": {
                                    "description": "The Text of the review",
                                    "type": "string",
                                    "example": "Design"
                                },
                                "review": {
                                    "description": "The review of the post",
                                    "type": "string",
                                    "example": "Impressive."
                                }
                            },
                            "type": "object"
                        }
                    },
                    "faqs": {
                        "description": "Array of FAQ details",
                        "type": "array",
                        "items": {
                            "title": "FAQ",
                            "description": "FAQ details",
                            "required": [
                                "question",
                                "answer"
                            ],
                            "properties": {
                                "question": {
                                    "description": "The question field",
                                    "type": "string",
                                    "example": "How much price of Iphone?"
                                },
                                "answer": {
                                    "description": "The answer field",
                                    "type": "string",
                                    "example": "Its price is 45,000"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StorePostReviewRequest": {
                "title": "Store Post Review Request",
                "description": "Request data for storing post reviews",
                "required": [
                    "post_id",
                    "reviews"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "post_id": {
                                "description": "The ID of the post",
                                "type": "integer"
                            },
                            "reviews": {
                                "description": "Array of post review details",
                                "type": "array",
                                "items": {
                                    "title": "Post Review",
                                    "description": "Post review details",
                                    "required": [
                                        "review_id",
                                        "title",
                                        "review"
                                    ],
                                    "properties": {
                                        "review_id": {
                                            "description": "The id of the review",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "title": {
                                            "description": "The Text of the review",
                                            "type": "string",
                                            "example": "Design"
                                        },
                                        "review": {
                                            "description": "The review of the post",
                                            "type": "string",
                                            "example": "Impressive."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreProductCategoryRequest": {
                "title": "Product Category  Store Request",
                "description": "Product Category  store request data",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Product Category display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the ProductCategory.",
                                "type": "string",
                                "example": "apple"
                            },
                            "description": {
                                "description": "The Product Category's description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "image": {
                                "description": "The Product Category's image ",
                                "type": "string",
                                "example": "this is the image string url."
                            },
                            "long_description": {
                                "description": "The Product Category's long description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "seo_title": {
                                "description": "The Product Category's seo title ",
                                "type": "string",
                                "example": "this is the title of it."
                            },
                            "meta_description": {
                                "description": "The Product Category's meta description ",
                                "type": "string",
                                "example": "this is the meta description  of it."
                            },
                            "order_by": {
                                "description": "The Priority of Product Category",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub  Category, Send Product Category Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreSocialLoginRequest": {
                "title": "Social Login Store Request",
                "description": "Social Login store request data",
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "firstname": {
                                "description": "The user's first name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "lastname": {
                                "description": "The user's last name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "email": {
                                "description": "The user's email address",
                                "type": "email",
                                "example": "admin@gbn.com"
                            },
                            "type": {
                                "description": "The Social login type",
                                "type": "string",
                                "example": "fb"
                            },
                            "google_id": {
                                "description": "The user's unique google id",
                                "type": "string",
                                "example": "abcd-sj@google.com"
                            },
                            "fb_id": {
                                "description": "The user's unique fb id",
                                "type": "string",
                                "example": "abcd-sj@fb.com"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreTagRequest": {
                "title": "Tag  Store Request",
                "description": "Tag  store request data",
                "required": [
                    "name",
                    "description"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The tag display name",
                                "type": "string",
                                "example": "Lenevo"
                            },
                            "description": {
                                "description": "The Description  of the Tag.",
                                "type": "string",
                                "example": "Lenevo laptops in nepal"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreUserBookmarkRequest": {
                "title": "Bookmark  Store Request",
                "description": "Bookmark  store request data",
                "required": [
                    "post_id"
                ],
                "properties": {
                    "post_id": {
                        "description": "The id of the post",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "User  Store Request",
                "description": "User  store request data",
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "username",
                    "password"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "firstname": {
                                "description": "The user's first name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "lastname": {
                                "description": "The user's last name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "username": {
                                "description": "The user's username",
                                "type": "string",
                                "example": "admin1"
                            },
                            "email": {
                                "description": "The user's email address",
                                "type": "email",
                                "example": "admin@gbn.com"
                            },
                            "password": {
                                "description": "The user's password",
                                "type": "string",
                                "example": "admin@123"
                            },
                            "user_type_id": {
                                "description": "The user's usertype id",
                                "type": "integer",
                                "example": "1"
                            },
                            "facebook_url": {
                                "description": "The user's facebook profile link",
                                "type": "string",
                                "example": "www.fb.com/abc"
                            },
                            "instagram_url": {
                                "description": "The user's instagram profile link",
                                "type": "string",
                                "example": "www.instagram.com/abc"
                            },
                            "linkedin_url": {
                                "description": "The user's linkedin profile link",
                                "type": "string",
                                "example": "www.linkedin.com/abc"
                            },
                            "google_url": {
                                "description": "The user's google profile link",
                                "type": "string",
                                "example": "www.google.com/abc"
                            },
                            "twitter_url": {
                                "description": "The user's twitter profile link",
                                "type": "string",
                                "example": "www.twitter.com/abc"
                            },
                            "youtube_url": {
                                "description": "The user's youtube profile link",
                                "type": "string",
                                "example": "www.youtube.com/abc"
                            },
                            "description": {
                                "description": "The user's short introduction description",
                                "type": "string",
                                "example": "This is me, I am doing thiss......"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreUserTypeRequest": {
                "title": "User Type Store Request",
                "description": "User Type store request data",
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The usertype's name",
                                "type": "string",
                                "example": "Admin"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "StoreVendorRequest": {
                "title": "Vendor  Store Request",
                "description": "Vendor  store request data",
                "required": [
                    "name",
                    "slug",
                    "image",
                    "website_url",
                    "order_by"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Vendor display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the Vendor.",
                                "type": "string",
                                "example": "apple"
                            },
                            "image": {
                                "description": "The Image Link ",
                                "type": "string",
                                "example": "this is the link of image."
                            },
                            "website_url": {
                                "description": "The Website url Link ",
                                "type": "string",
                                "example": "https://abc.com"
                            },
                            "order_by": {
                                "description": "The Priority of Vendor",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateAttributeRequest": {
                "title": "Attribute  Update Request",
                "description": "Attribute  update request data",
                "required": [
                    "name",
                    "slug",
                    "is_active",
                    "values"
                ],
                "properties": {
                    "name": {
                        "description": "The menu display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The unique slug  of the Attribute.",
                        "type": "string",
                        "example": "/dashboard"
                    },
                    "is_active": {
                        "description": "Enable/Disable of attributes ",
                        "type": "string",
                        "example": "Y/N"
                    },
                    "values": {
                        "description": "The Values in json format",
                        "type": "json",
                        "example": "['100','200','300']"
                    }
                },
                "type": "object"
            },
            "UpdateBrandRequest": {
                "title": "Brand Update Request",
                "description": "Brand  update request data",
                "required": [
                    "name",
                    "slug",
                    "image",
                    "order_by"
                ],
                "properties": {
                    "name": {
                        "description": "The Brand display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Endpoint  of the Brand.",
                        "type": "string",
                        "example": "apple"
                    },
                    "image": {
                        "description": "The Image Link ",
                        "type": "string",
                        "example": "this is the link of image."
                    },
                    "order_by": {
                        "description": "The Priority of Brand",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UpdateMediaRequest": {
                "title": "Media  Update Request",
                "description": "Media  update request data",
                "required": [
                    "name",
                    "caption",
                    "description",
                    "alt_text"
                ],
                "properties": {
                    "name": {
                        "description": "The media display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "caption": {
                        "description": "The caption  of the Media.",
                        "type": "string",
                        "example": "apple-14"
                    },
                    "description": {
                        "description": "The media's description ",
                        "type": "string",
                        "example": "This is the description of the media"
                    },
                    "alt_text": {
                        "description": "The Alternative text of the media",
                        "type": "string",
                        "example": "apple-14-image"
                    },
                    "image": {
                        "description": "The image",
                        "type": "file",
                        "example": "apple-14-image"
                    }
                },
                "type": "object"
            },
            "UpdateMenuRequest": {
                "title": "Menu  Update Request",
                "description": "Menu  update request data",
                "required": [
                    "name",
                    "url",
                    "icon",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The menu display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "url": {
                                "description": "The Endpoint  of the Menu.",
                                "type": "string",
                                "example": "/dashboard"
                            },
                            "icon": {
                                "description": "The menu's icon ",
                                "type": "string",
                                "example": "fa fa-cogs"
                            },
                            "order_by": {
                                "description": "The Priority of menu",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub menu, Send Menu Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePostCategoryRequest": {
                "title": "Post Category  Update Request",
                "description": "Post Category  update request data",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Post Category display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the PostCategory.",
                                "type": "string",
                                "example": "apple"
                            },
                            "description": {
                                "description": "The Post Category's description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "order_by": {
                                "description": "The Priority of Post Category",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub  Category, Send Post Category Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePostPriceRequest": {
                "title": "Post Price  Update Request",
                "description": "Post Price  update request data",
                "required": [
                    "title",
                    "price"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "The Post Price display name",
                                "type": "string",
                                "example": "Samsung galaxy S23 Ultra"
                            },
                            "price": {
                                "description": "The Amount of the  PostPrice.",
                                "type": "number",
                                "format": "float",
                                "example": "10000"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePostRequest": {
                "title": "Post Update Request",
                "description": "Post update request data",
                "required": [
                    "title",
                    "slug",
                    "description",
                    "short_description",
                    "category_id",
                    "sub_category_id",
                    "isprice",
                    "show_in_pricelist"
                ],
                "properties": {
                    "title": {
                        "description": "The Post Title",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Slug for the post",
                        "type": "string",
                        "example": "apple"
                    },
                    "short_description": {
                        "description": "The Post's short description ",
                        "type": "string",
                        "example": "this is the short description of it."
                    },
                    "description": {
                        "description": "The Post's description ",
                        "type": "string",
                        "example": "this is the description of it."
                    },
                    "category_id": {
                        "description": "The  Post Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "sub_category_id": {
                        "description": "The Post Sub Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "isprice": {
                        "description": "If Price then 'Y' else 'N'",
                        "type": "string",
                        "example": "Y"
                    },
                    "show_in_pricelist": {
                        "description": "If Price to be shown for price list  then 'Y' else 'N'",
                        "type": "string",
                        "example": "Y"
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "example": "This is the title for SEO"
                    },
                    "seo_description": {
                        "description": "Description for seo",
                        "type": "string",
                        "example": "This is description for SEO"
                    },
                    "featured_image": {
                        "description": "Image",
                        "type": "string",
                        "example": "https://gadgetbyte.com/logo.png"
                    },
                    "categories": {
                        "description": "Ids of the category",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "status": {
                        "description": "Status for Draft,Review",
                        "type": "string",
                        "example": "D for Draft,R for Review"
                    },
                    "post_on": {
                        "description": "Date & time to be published on",
                        "type": "string",
                        "example": "2024-05-14 13:55:12"
                    },
                    "is_cornerstone": {
                        "description": "Cornerstone value in Y/N",
                        "type": "string",
                        "example": "Y"
                    },
                    "seo_title_facebook": {
                        "description": "The seo title field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_facebook": {
                        "description": "The seo description field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_title_twitter": {
                        "description": "The seo title field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_twitter": {
                        "description": "The seo description field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "reviews": {
                        "description": "Array of post review details",
                        "type": "array",
                        "items": {
                            "title": "Post Review",
                            "description": "Post review details",
                            "required": [
                                "review_id",
                                "title",
                                "review"
                            ],
                            "properties": {
                                "review_id": {
                                    "description": "The id of the review",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "title": {
                                    "description": "The Text of the review",
                                    "type": "string",
                                    "example": "Design"
                                },
                                "review": {
                                    "description": "The review of the post",
                                    "type": "string",
                                    "example": "Impressive."
                                }
                            },
                            "type": "object"
                        }
                    },
                    "faqs": {
                        "description": "Array of FAQ details",
                        "type": "array",
                        "items": {
                            "title": "FAQ",
                            "description": "FAQ details",
                            "required": [
                                "question",
                                "answer"
                            ],
                            "properties": {
                                "question": {
                                    "description": "The question field",
                                    "type": "string",
                                    "example": "How much price of Iphone?"
                                },
                                "answer": {
                                    "description": "The answer field",
                                    "type": "string",
                                    "example": "Its price is 45,000"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdatePostReviewRequest": {
                "title": "Post Review  Update Request",
                "description": "Post Review  update request data",
                "required": [
                    "review_id",
                    "title",
                    "review"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "review_id": {
                                "description": "The Id of The Review",
                                "type": "integer",
                                "example": "1"
                            },
                            "title": {
                                "description": "The Title of The Review",
                                "type": "string",
                                "example": "Design"
                            },
                            "review": {
                                "description": "The Review of the  Post.",
                                "type": "string",
                                "example": "Very Impressive"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateProductCategoryRequest": {
                "title": "Product Category  Update Request",
                "description": "Product Category  update request data",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "order_by",
                    "parent_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Product Category display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the ProductCategory.",
                                "type": "string",
                                "example": "apple"
                            },
                            "description": {
                                "description": "The Product Category's description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "image": {
                                "description": "The Product Category's image ",
                                "type": "string",
                                "example": "this is the image string url."
                            },
                            "long_description": {
                                "description": "The Product Category's long description ",
                                "type": "string",
                                "example": "this is the description of it."
                            },
                            "seo_title": {
                                "description": "The Product Category's seo title ",
                                "type": "string",
                                "example": "this is the title of it."
                            },
                            "meta_description": {
                                "description": "The Product Category's meta description ",
                                "type": "string",
                                "example": "this is the meta description  of it."
                            },
                            "order_by": {
                                "description": "The Priority of Product Category",
                                "type": "integer",
                                "example": "1"
                            },
                            "parent_id": {
                                "description": "If Sub  Category, Send Product Category Id else 0",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateTagRequest": {
                "title": "Tag  Update Request",
                "description": "Tag  update request data",
                "required": [
                    "name",
                    "description"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The tag display name",
                                "type": "string",
                                "example": "Lenevo"
                            },
                            "description": {
                                "description": "The Description  of the Tag.",
                                "type": "string",
                                "example": "Lenevo laptops in nepal"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserRequest": {
                "title": "User  Update Request",
                "description": "User  update request data",
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "username",
                    "password"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "firstname": {
                                "description": "The user's first name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "lastname": {
                                "description": "The user's last name",
                                "type": "string",
                                "example": "Admin"
                            },
                            "username": {
                                "description": "The user's username",
                                "type": "string",
                                "example": "admin1"
                            },
                            "email": {
                                "description": "The user's email address",
                                "type": "email",
                                "example": "admin@gbn.com"
                            },
                            "password": {
                                "description": "The user's password",
                                "type": "string",
                                "example": "admin@123"
                            },
                            "user_type_id": {
                                "description": "The user's usertype id",
                                "type": "integer",
                                "example": "1"
                            },
                            "facebook_url": {
                                "description": "The user's facebook profile link",
                                "type": "string",
                                "example": "www.fb.com/abc"
                            },
                            "instagram_url": {
                                "description": "The user's instagram profile link",
                                "type": "string",
                                "example": "www.instagram.com/abc"
                            },
                            "linkedin_url": {
                                "description": "The user's linkedin profile link",
                                "type": "string",
                                "example": "www.linkedin.com/abc"
                            },
                            "google_url": {
                                "description": "The user's google profile link",
                                "type": "string",
                                "example": "www.google.com/abc"
                            },
                            "twitter_url": {
                                "description": "The user's twitter profile link",
                                "type": "string",
                                "example": "www.twitter.com/abc"
                            },
                            "youtube_url": {
                                "description": "The user's youtube profile link",
                                "type": "string",
                                "example": "www.youtube.com/abc"
                            },
                            "description": {
                                "description": "The user's short introduction description",
                                "type": "string",
                                "example": "This is me, I am doing thiss......"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserTypeRequest": {
                "title": "User Type Update Request",
                "description": "User Type update request data",
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The name of the bank",
                                "type": "string",
                                "example": "Admin"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateVendorRequest": {
                "title": "Vendor Update Request",
                "description": "Vendor  update request data",
                "required": [
                    "name",
                    "slug",
                    "image",
                    "website_url",
                    "order_by"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationErrorResponse"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Vendor display name",
                                "type": "string",
                                "example": "Dashboard"
                            },
                            "slug": {
                                "description": "The Endpoint  of the Vendor.",
                                "type": "string",
                                "example": "apple"
                            },
                            "image": {
                                "description": "The Image Link ",
                                "type": "string",
                                "example": "this is the link of image."
                            },
                            "website_url": {
                                "description": "The Website url Link ",
                                "type": "string",
                                "example": "https://abc.com"
                            },
                            "order_by": {
                                "description": "The Priority of Vendor",
                                "type": "integer",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AttributeResource": {
                "title": "Attribute Resource",
                "description": "Attribute resource representation",
                "properties": {
                    "name": {
                        "description": "The menu display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The unique slug  of the Attribute.",
                        "type": "string",
                        "example": "/dashboard"
                    },
                    "is_active": {
                        "description": "Enable/Disable of attributes ",
                        "type": "string",
                        "example": "Y/N"
                    },
                    "values": {
                        "description": "The Values in json format",
                        "type": "json",
                        "example": "['100','200','300']"
                    }
                },
                "type": "object"
            },
            "BrandResource": {
                "title": "Brand Resource",
                "description": "Brand resource representation",
                "properties": {
                    "name": {
                        "description": "The Brand display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Endpoint  of the Brand.",
                        "type": "string",
                        "example": "apple"
                    },
                    "image": {
                        "description": "The Image Link ",
                        "type": "string",
                        "example": "this is the link of image."
                    },
                    "order_by": {
                        "description": "The Priority of Brand",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "FrontendPostResource": {
                "title": "Post Resource",
                "description": "Post resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "description": "The display title of the post",
                        "type": "string",
                        "example": "Samsung Phone Nepal"
                    },
                    "slug": {
                        "description": "The Slug of the post",
                        "type": "string",
                        "example": "samsung-phones-nepal"
                    },
                    "short_description": {
                        "description": "The Short Description of the post",
                        "type": "string",
                        "example": "short description goes here"
                    },
                    "description": {
                        "description": "The Description of the post",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "isprice": {
                        "description": "The Price flag of the post",
                        "type": "string",
                        "example": "Y"
                    },
                    "show_in_pricelist": {
                        "description": "The Pricelist flag of the post",
                        "type": "string",
                        "example": "Y"
                    },
                    "featured_image": {
                        "description": "The Image of the post",
                        "type": "string",
                        "example": "https://gadgetbyte.com/logo.png"
                    },
                    "categories": {
                        "description": "Categories of the Post",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "seo_title": {
                        "description": "The Title of the post's SEO",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "seo_description": {
                        "description": "The Description of the post's SEO",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "seo_title_social_media": {
                        "description": "The seo title field for social media  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    }
                },
                "type": "object"
            },
            "MediaResource": {
                "title": "Media Resource",
                "description": "Media resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the media",
                        "type": "integer",
                        "example": "1"
                    },
                    "image": {
                        "description": "The image name of the media",
                        "type": "string",
                        "example": "image.png"
                    },
                    "name": {
                        "description": "The display name of the media",
                        "type": "string",
                        "example": "Lenevo"
                    },
                    "caption": {
                        "description": "The caption of the media",
                        "type": "string",
                        "example": "Lenevo"
                    },
                    "description": {
                        "description": "The Description of the media",
                        "type": "string",
                        "example": "This is the description to lenevo best laptop in nepal"
                    }
                },
                "type": "object"
            },
            "MenuResource": {
                "title": "Menu Resource",
                "description": "Menu resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the menu",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The display name of the menu",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "url": {
                        "description": "The Endpoint of the menu",
                        "type": "string",
                        "example": "/dashboard"
                    },
                    "icon": {
                        "description": "The icon of the menu",
                        "type": "string",
                        "example": "fa fa-cogs"
                    },
                    "order_by": {
                        "description": "The Priority of menu",
                        "type": "integer",
                        "example": "1"
                    },
                    "parent_id": {
                        "description": "If Sub menu, Send Menu Id else 0",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "Menu Permission Resource",
                "description": "Menu Permission resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the menupermission",
                        "type": "integer",
                        "example": "1"
                    },
                    "menu_id": {
                        "description": "The menu's id",
                        "type": "integer",
                        "example": "1"
                    },
                    "user_type_id": {
                        "description": "The User type's id",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "PostCategoryResource": {
                "title": "Post Category Resource",
                "description": "Post Category resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post category",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The Post Category display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Endpoint  of the PostCategory.",
                        "type": "string",
                        "example": "apple"
                    },
                    "description": {
                        "description": "The Post Category's description ",
                        "type": "string",
                        "example": "this is the description of it."
                    },
                    "order_by": {
                        "description": "The Priority of Post Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "parent_id": {
                        "description": "If Sub  Category, Send Post Category Id else 0",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "PostImageResource": {
                "title": "Post Image Resource",
                "description": "Post Image resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post image",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "description": "The title of the post image",
                        "type": "string",
                        "example": "Samsung Galaxy S23"
                    },
                    "slug": {
                        "description": "The slug of the post image",
                        "type": "string",
                        "example": "Samsung Galaxy S23"
                    },
                    "post_id": {
                        "description": "The Id of the post ",
                        "type": "integer",
                        "example": "1"
                    },
                    "image": {
                        "description": "The relative path of the post image",
                        "type": "string",
                        "example": "/post/post.png"
                    }
                },
                "type": "object"
            },
            "PostPriceResource": {
                "title": "Post Price Resource",
                "description": "Post Price resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post price",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "description": "The title of the post price",
                        "type": "string",
                        "example": "Samsung Galaxy S23"
                    },
                    "post_id": {
                        "description": "The Id of the post ",
                        "type": "integer",
                        "example": "1"
                    },
                    "price": {
                        "description": "The amount of the post price",
                        "type": "number",
                        "format": "float",
                        "example": "10000"
                    }
                },
                "type": "object"
            },
            "PostResource": {
                "title": "Post Resource",
                "description": "Post resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "description": "The display title of the post",
                        "type": "string",
                        "example": "Samsung Phone Nepal"
                    },
                    "slug": {
                        "description": "The Slug of the post",
                        "type": "string",
                        "example": "samsung-phones-nepal"
                    },
                    "short_description": {
                        "description": "The Short Description of the post",
                        "type": "string",
                        "example": "short description goes here"
                    },
                    "description": {
                        "description": "The Description of the post",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "seo_title": {
                        "description": "The Title of the post's SEO",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "featured_image": {
                        "description": "The Image of the post",
                        "type": "string"
                    },
                    "seo_description": {
                        "description": "The Description of the post's SEO",
                        "type": "string",
                        "example": "Description goes here"
                    },
                    "status": {
                        "description": "Status for Draft,Review",
                        "type": "string",
                        "example": "D for Draft,R for Review"
                    },
                    "post_on": {
                        "description": "Date & time to be published on",
                        "type": "string",
                        "example": "2024-05-14 13:55:12"
                    },
                    "is_cornerstone": {
                        "description": "Cornerstone value in Y/N",
                        "type": "string",
                        "example": "Y"
                    },
                    "seo_title_facebook": {
                        "description": "The seo title field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_facebook": {
                        "description": "The seo description field for fb  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_title_instagram": {
                        "description": "The seo title field for instagram  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_instagram": {
                        "description": "The seo description field for instagram  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_title_twitter": {
                        "description": "The seo title field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "seo_description_twitter": {
                        "description": "The seo description field for twitter  of the post review",
                        "type": "string",
                        "example": "Apple 14 launched in Nepal."
                    },
                    "reviews": {
                        "description": "Array of post review details",
                        "type": "array",
                        "items": {
                            "title": "Post Review",
                            "description": "Post review details",
                            "required": [
                                "review_id",
                                "title",
                                "review"
                            ],
                            "properties": {
                                "review_id": {
                                    "description": "The id of the review",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "title": {
                                    "description": "The Text of the review",
                                    "type": "string",
                                    "example": "Design"
                                },
                                "review": {
                                    "description": "The review of the post",
                                    "type": "string",
                                    "example": "Impressive."
                                },
                                "description": {
                                    "description": "The description of the post review",
                                    "type": "string",
                                    "example": "Impressive."
                                }
                            },
                            "type": "object"
                        }
                    },
                    "faqs": {
                        "description": "Array of FAQ details",
                        "type": "array",
                        "items": {
                            "title": "FAQ",
                            "description": "FAQ details",
                            "required": [
                                "question",
                                "answer"
                            ],
                            "properties": {
                                "question": {
                                    "description": "The question field",
                                    "type": "string",
                                    "example": "How much price of Iphone?"
                                },
                                "answer": {
                                    "description": "The answer field",
                                    "type": "string",
                                    "example": "Its price is 45,000"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PostReviewResource": {
                "title": "Post Review Resource",
                "description": "Post Review resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post review",
                        "type": "integer",
                        "example": "1"
                    },
                    "post_id": {
                        "description": "The Id of the post ",
                        "type": "integer",
                        "example": "1"
                    },
                    "review_id": {
                        "description": "The Id of the Review",
                        "type": "integer",
                        "example": "1"
                    },
                    "review": {
                        "description": "The review of the post",
                        "type": "string",
                        "example": "Very Nice."
                    }
                },
                "type": "object"
            },
            "ProductCategoryResource": {
                "title": "Product Category Resource",
                "description": "Product Category resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the post category",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The Product Category display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Endpoint  of the ProductCategory.",
                        "type": "string",
                        "example": "apple"
                    },
                    "description": {
                        "description": "The Product Category's description ",
                        "type": "string",
                        "example": "this is the description of it."
                    },
                    "image": {
                        "description": "The Product Category's image ",
                        "type": "string",
                        "example": "this is the image string url."
                    },
                    "long_description": {
                        "description": "The Product Category's long description ",
                        "type": "string",
                        "example": "this is the description of it."
                    },
                    "seo_title": {
                        "description": "The Product Category's seo title ",
                        "type": "string",
                        "example": "this is the title of it."
                    },
                    "meta_description": {
                        "description": "The Product Category's meta description ",
                        "type": "string",
                        "example": "this is the meta description  of it."
                    },
                    "order_by": {
                        "description": "The Priority of Product Category",
                        "type": "integer",
                        "example": "1"
                    },
                    "parent_id": {
                        "description": "If Sub  Category, Send Product Category Id else 0",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ReviewResource": {
                "title": "Review Resource",
                "description": "Review resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the tag",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The display name of the tag",
                        "type": "string",
                        "example": "Lenevo"
                    }
                },
                "type": "object"
            },
            "TagResource": {
                "title": "Tag Resource",
                "description": "Tag resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the tag",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The display name of the tag",
                        "type": "string",
                        "example": "Lenevo"
                    },
                    "description": {
                        "description": "The Description of the tag",
                        "type": "string",
                        "example": "This is the description to lenevo best laptop in nepal"
                    }
                },
                "type": "object"
            },
            "UserBookmarkResource": {
                "title": "Bookmark Resource",
                "description": "Bookmark resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the tag",
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "description": "The id of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "post_id": {
                        "description": "The id of the post",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "firstname": {
                        "description": "The first name of the user",
                        "type": "string",
                        "example": "Admin"
                    },
                    "lastname": {
                        "description": "The last name of the user",
                        "type": "string",
                        "example": "Admin"
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "email",
                        "example": "admin@gbn.com"
                    },
                    "username": {
                        "description": "The username of the user",
                        "type": "string",
                        "example": "admin1"
                    },
                    "password": {
                        "description": "The password of the user",
                        "type": "string",
                        "example": "admin@1"
                    },
                    "user_type_id": {
                        "description": "The User Type of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "facebook_url": {
                        "description": "The user's facebook profile link",
                        "type": "string",
                        "example": "www.fb.com/abc"
                    },
                    "instagram_url": {
                        "description": "The user's instagram profile link",
                        "type": "string",
                        "example": "www.instagram.com/abc"
                    },
                    "linkedin_url": {
                        "description": "The user's linkedin profile link",
                        "type": "string",
                        "example": "www.linkedin.com/abc"
                    },
                    "google_url": {
                        "description": "The user's google profile link",
                        "type": "string",
                        "example": "www.google.com/abc"
                    },
                    "twitter_url": {
                        "description": "The user's twitter profile link",
                        "type": "string",
                        "example": "www.twitter.com/abc"
                    },
                    "youtube_url": {
                        "description": "The user's youtube profile link",
                        "type": "string",
                        "example": "www.youtube.com/abc"
                    },
                    "description": {
                        "description": "The user's short introduction description",
                        "type": "string",
                        "example": "This is me, I am doing thiss......"
                    },
                    "created_by": {
                        "description": "user created by",
                        "type": "integer",
                        "example": "7"
                    },
                    "created_at": {
                        "description": "user created at ",
                        "type": "string",
                        "example": "2023-06-21 08:25:18.000"
                    }
                },
                "type": "object"
            },
            "UserTypeResource": {
                "title": "UserType Resource",
                "description": "UserType resource representation",
                "properties": {
                    "id": {
                        "description": "The unique id of the usertype",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "The name of the User Type",
                        "type": "string",
                        "example": "Admin"
                    },
                    "created_by": {
                        "description": "User Type created by",
                        "type": "integer",
                        "example": "7"
                    },
                    "created_at": {
                        "description": "User Type created at ",
                        "type": "string",
                        "example": "2023-06-21 08:25:18.000"
                    }
                },
                "type": "object"
            },
            "VendorResource": {
                "title": "Vendor Resource",
                "description": "Vendor resource representation",
                "properties": {
                    "name": {
                        "description": "The Vendor display name",
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "slug": {
                        "description": "The Endpoint  of the Vendor.",
                        "type": "string",
                        "example": "apple"
                    },
                    "image": {
                        "description": "The Image Link ",
                        "type": "string",
                        "example": "this is the link of image."
                    },
                    "website_url": {
                        "description": "The Website Link ",
                        "type": "string",
                        "example": "https://abc.com"
                    },
                    "order_by": {
                        "description": "The Priority of Vendor",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "description": "Bearer Token Authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints related to user authentication"
        }
    ]
}